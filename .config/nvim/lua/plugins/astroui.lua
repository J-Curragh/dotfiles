-- AstroUI provides the basis for configuring the AstroNvim User Interface
-- Configuration documentation can be found with `:h astroui`
local C = require "colours"

---@type LazySpec
return {
  "AstroNvim/astroui",
  ---@type AstroUIOpts
  opts = {
    highlights = {
      init = { -- a table of overrides/changes when applying the astrotheme theme
        Cursor = { fg = C.black, bg = C.cream },
        Visual = { fg = C.none, bg = C.grey },
        CursorLine = { fg = C.none, bg = C.grey },
        CursorColumn = { fg = C.none, bg = C.grey },
        ColorColumn = { fg = C.none, bg = C.grey },
        LineNr = { fg = C.lightgrey, bg = C.none },
        WinSeperator = { fg = C.lightgrey, bg = C.darkgrey },
        MatchParen = { fg = C.pink, bg = C.none },
        StatusLine = { fg = C.cream, bg = C.darkgrey },
        StatusLineNC = { fg = C.cream, bg = C.darkgrey },
        NormalNC = { fg = C.black, bg = C.none },
        NeoTreeNormal = { fg = C.cream, bg = C.darkgrey },
        NeoTreeNormalNC = { fg = C.cream, bg = C.darkgrey },
        NeoTreeEndOfBuffer = { fg = C.none, bg = C.none },
        NeoTreeTabActive = { fg = C.red, bold = true, italic = true },
        SignColumn = { fg = C.none, bg = C.none },
        Pmenu = { fg = C.none, bg = C.none },
        PmenuSel = { fg = C.none, bg = C.grey },
        IncSearch = { fg = C.black, bg = C.yellow },
        Search = { fg = C.none, bg = C.none },
        Directory = { fg = C.yellow, bg = C.none },
        Folded = { fg = C.fadedblue, bg = C.black },
        Normal = { fg = C.cream, bg = C.black },
        Boolean = { fg = C.violet, bg = C.none },
        Character = { fg = C.violet, bg = C.none },
        Comment = { fg = C.lightgrey, bg = C.none },
        Conditional = { fg = C.pink, bg = C.none },
        Constant = { fg = C.none, bg = C.none },
        Define = { fg = C.pink, bg = C.none },
        DiffAdd = { fg = C.cream, bg = C.darkgreen },
        DiffDelete = { fg = C.darkred, bg = C.none },
        DiffChange = { fg = C.cream, bg = C.darkerblue },
        DiffText = { fg = C.cream, bg = C.darkblue },
        ErrorMsg = { fg = C.cream, bg = C.pink },
        WarningMsg = { fg = C.cream, bg = C.pink },
        Float = { fg = C.violet, bg = C.none },
        Function = { fg = C.limegreen, bg = C.none },
        Identifier = { fg = C.blue, bg = C.none },
        Keyword = { fg = C.pink, bg = C.none },
        Label = { fg = C.yellow, bg = C.none },
        NonText = { fg = C.lightgrey, bg = C.black },
        Number = { fg = C.violet, bg = C.none },
        Operator = { fg = C.cyan, bg = C.none },
        PreProc = { fg = C.pink, bg = C.none },
        Special = { fg = C.cream, bg = C.none },
        SpecialKey = { fg = C.lightgrey, bg = C.black },
        Statement = { fg = C.pink, bg = C.none },
        StorageClass = { fg = C.limegreen, bg = C.none },
        String = { fg = C.yellow, bg = C.none },
        Tag = { fg = C.pink, bg = C.none },
        Title = { fg = C.blue, bg = C.none },
        Todo = { fg = C.fadedblue, bg = C.none },
        Type = { fg = C.pink, bg = C.none },
        Underlined = { fg = C.none, bg = C.none },
        FoldColumn = { fg = C.red, bg = C.none },
        DiagnosticVirtualTextHint = { fg = C.white, bg = C.none },
        DiagnosticVirtualTextWarn = { fg = C.equator, bg = C.none },
        DiagnosticVirtualTextInfo = { fg = C.wild_willow, bg = C.none },
        QuickFixLine = { fg = C.white },
        Include = { fg = C.purple, italic = true },
        Repeat = { fg = C.purple, bg = C.none, italic = true }, -- for, do, while, etc.,
        Exception = { fg = C.purple, bg = C.none, italic = true }, -- try, catch, throw,
        NormalFloat = { bg = C.black },
        TabLine = { bg = C.black },
        DiagnosticFloatingOk = { link = "DiagnosticOk" },
        DiagnosticFloatingError = { link = "DiagnosticError" },
        DiagnosticFloatingWarn = { link = "DiagnosticWarn" },
        DiagnosticFloatingInfo = { link = "DiagnosticInfo" },
        DiagnosticFloatingHint = { link = "DiagnosticHint" },
        FloatShadow = { bg = C.black },
        FloatShadowThrough = { bg = C.black },
        TreesitterContextLineNumber = { fg = C.pale_red, bg = C.black },
        TelescopeSelection = { fg = C.red, bg = C.surface1 },
        IlluminatedWordText = { fg = C.none, bg = C.surface1 },
        IlluminatedWordRead = { fg = C.none, bg = C.surface1 },
        IlluminatedWordWrite = { fg = C.none, bg = C.surface1 },
        ["@lsp.typemod.function.global"] = { fg = C.blue_1 },
        ["@method"] = { fg = C.cyan, bg = C.none },
        ["@function.method.call.lua"] = { link = "@method" },
        ["@lsp.type.class"] = { fg = C.blue },
        ["@lsp.type.namespace.python"] = { link = "Identifier" },
        ["@lsp.type.parameter.python"] = { link = "Hlargs" },
        ["@lsp.type.parameter.go"] = { link = "Hlargs" },
        ["@function.builtin"] = { fg = C.blue_1 },
        ["@variable.builtin"] = { fg = C.red_3 },
      },
    },
    -- Icons can be configured throughout the interface
    icons = {
      -- configure the loading of the lsp in the status line
      LSPLoading1 = "⠋",
      LSPLoading2 = "⠙",
      LSPLoading3 = "⠹",
      LSPLoading4 = "⠸",
      LSPLoading5 = "⠼",
      LSPLoading6 = "⠴",
      LSPLoading7 = "⠦",
      LSPLoading8 = "⠧",
      LSPLoading9 = "⠇",
      LSPLoading10 = "⠏",

      ActiveLSP = "",
      ActiveTS = " ",
      BufferClose = " ",
      DapBreakpoint = "",
      DapBreakpointCondition = "",
      DapBreakpointRejected = "",
      DapLogPoint = "",
      DapStopped = "",
      DefaultFile = "",
      Diagnostic = "",
      DiagnosticError = "",
      DiagnosticHint = "",
      DiagnosticInfo = "",
      DiagnosticWarn = "",
      Ellipsis = "",
      FileModified = "",
      FileReadOnly = "",
      FoldClosed = "",
      FoldOpened = "",
      FolderClosed = "",
      FolderEmpty = "",
      FolderOpen = "",
      Git = "",
      GitAdd = "",
      GitBranch = "",
      GitChange = "",
      GitConflict = "",
      GitDelete = "",
      GitIgnored = "",
      GitRenamed = "",
      GitStaged = "",
      GitUnstaged = "",
      GitUntracked = "",
      LSPLoaded = "",
      MacroRecording = "",
      Paste = "",
      Search = "",
      Selected = "",
      TabClose = "",
    },
    status = {
      colors = {
        tabline_bg = C.darkgrey,
      },
      separators = {
        breadcrumbs = "  ",
        path = "  ",
      },
    },
  },
}
